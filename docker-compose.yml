version: '3'
services:

  auth-service:
    build: ./auth-service
    ports:
      - 8000:8000
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    environment:
      CONFIG_URL: ${CONFIG_URL}
      SERVICE_REGISTRY_URL: ${SERVICE_REGISTRY_URL}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
      AUTH_DB_URL: ${AUTH_DB_URL}
      AUTH_DB_USER: ${AUTH_DB_USER}
      AUTH_DB_PASSWORD: ${AUTH_DB_PASSWORD}
    depends_on:
      - config
      - service-registry
      - auth-database
    networks:
      - backend

  auth-database:
    restart: always
    image: postgres
    environment:
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
      POSTGRES_DB: auth
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432

  config:
    build: ./config-service
    ports:
      - 8888:8888
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    networks:
      - backend
    environment:
        CONFIG_URL: ${CONFIG_URL}
        SERVICE_REGISTRY_URL: ${SERVICE_REGISTRY_URL}
        AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}

  family-service:
    build: ./family-service
    restart: always
    ports:
      - 8080:8080
    environment:
          CONFIG_URL: ${CONFIG_URL}
          SERVICE_REGISTRY_URL: ${SERVICE_REGISTRY_URL}
          AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
    depends_on:
      - config
      - service-registry
      - auth-service
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    networks:
          - backend

  news-service:
      build: ./news-service
      restart: always
      ports:
        - 8081:8081
      environment:
            CONFIG_URL: ${CONFIG_URL}
            SERVICE_REGISTRY_URL: ${SERVICE_REGISTRY_URL}
            AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
      depends_on:
        - config
        - service-registry
        - auth-service
      logging:
        options:
          max-size: "10m"
          max-file: "10"
      networks:
            - backend

  service-registry:
    build: ./service-registry
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    ports:
      - 8087:8087
      - 8761:8761
    environment:
          CONFIG_URL: ${CONFIG_URL}
          SERVICE_REGISTRY_URL: ${SERVICE_REGISTRY_URL}
    depends_on:
      - config
    networks:
          - backend

  gateway:
    build: ./gateway
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    ports:
      - 8886:8886
    environment:
        CONFIG_URL: ${CONFIG_URL}
        SERVICE_REGISTRY_URL: ${SERVICE_REGISTRY_URL}
        AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
    depends_on:
      - config
      - service-registry
      - auth-service
    command: ["./wait-for.sh", "service-registry:8887", "--", "java", "-Djava.security.egd=file:/dev/./urandom","-jar", "app.jar"]
    networks:
          - backend

#  monitoring:
#    build: ./monitoring
#    restart: always
#    logging:
#      options:
#        max-size: "10m"
#        max-file: "10"
#    ports:
#      - 8885:8885
#    environment:
#      CONFIG_URL: ${CONFIG_URL}
#    depends_on:
#      - config
#      - service-registry
#    networks:
#          - backend


networks:
  backend:
    driver: bridge